{"version":3,"file":"static/js/257.8eb7d035.chunk.js","mappings":"sRAGaA,EAAqBC,EAAAA,GAAAA,IAAH,mLAalBC,EAAwBD,EAAAA,GAAAA,IAAH,sWAsBrBE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,0Y,SC0BrB,EAvDqB,WAAO,IAAD,IACzB,GAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAU7C,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,IAAaP,GADvC,OACQQ,EADR,OAEET,EAASS,GAFX,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACT,KAGF,4BACE,SAACL,EAAD,CAAUe,GAAIR,EAAd,4BACCJ,IACC,UAACN,EAAD,YACE,gBACEmB,IACEb,EAAMc,YAAN,yCACsCd,EAAMc,aACxC,sCAENC,IAAG,oBAAef,EAAMgB,UAE1B,UAACpB,EAAD,YACE,0BACGI,EAAMgB,MADT,KACkBhB,EAAMiB,aAAaC,MAAM,EAAG,GAD9C,QAIA,wCAAgBC,SAA8B,GAArBnB,EAAMoB,cAA/B,QACA,sCACA,uBAAIpB,EAAMqB,YACV,oCACA,uBAAIrB,EAAMsB,OAAOC,KAAI,SAAAC,GAAG,gBAAOA,EAAIC,KAAX,WAExB,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,iCAMV,SAAC,KAAD,MAGL,C,6LC7DKc,EAAU,+BACVC,EAAU,mCAEHC,EAAiB,mCAAG,4FACT,sBAChBC,EAAUH,EADM,sBACN,mBAAsCC,GAFvB,SAGRG,EAAAA,GAAAA,IAAUD,GAHF,cAGzBE,EAHyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBN,EAAUH,EAAO,gCAA4BC,EAA5B,kBAA6CQ,GADvC,SAENL,EAAAA,GAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,sDAMfxB,EAAY,mCAAG,WAAM2B,GAAN,gFACpBP,EAAUH,EAAO,iBAAaU,EAAb,oBAA2BT,GADxB,SAEHG,EAAAA,GAAAA,IAAUD,GAFP,cAEpBE,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZK,EAAY,mCAAG,WAAMD,GAAN,gFACpBP,EAAUH,EAAO,iBAAaU,EAAb,4BAAmCT,GADhC,SAEHG,EAAAA,GAAAA,IAAUD,GAFP,cAEpBE,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZO,EAAe,mCAAG,WAAMF,GAAN,gFACvBP,EAAUH,EAAO,iBAAaU,EAAb,4BAAmCT,GAD7B,SAENG,EAAAA,GAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,GAHsB,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  gap: 60px;\n  flex-wrap: wrap;\n  margin: auto;\n  margin-bottom: 30px;\n  padding-top: 30px;\n\n  img {\n    object-fit: cover;\n  }\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  max-width: 400px;\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n  }\n\n  a {\n    display: inline-block;\n    color: black;\n    padding: 5px;\n    border-radius: 5px;\n    transition: background-color 250ms, color 250ms;\n    :hover,\n    :focus {\n      background-color: #a31525;\n      color: white;\n    }\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  margin-top: 10px;\n  padding: 10px 20px;\n\n  font-size: 20px;\n  text-decoration: none;\n  color: black;\n\n  border-radius: 7px;\n  cursor: pointer;\n  transition: background-color 250ms, box-shadow 250ms, color 250ms;\n\n  :hover,\n  :focus {\n    background-color: #a31525;\n    color: white;\n    box-shadow: 0 8px 6px -6px black;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from 'services/MovieApi';\nimport {\n  StyledMovieDetails,\n  MovieDetailsContainer,\n  BackLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieID } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      const movieData = await getMovieByID(movieID);\n      setMovie(movieData);\n    }\n    getMovieDetails();\n  }, [movieID]);\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>&larr; Go Back</BackLink>\n      {movie && (\n        <StyledMovieDetails>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                : 'https://via.placeholder.com/300x450'\n            }\n            alt={`poster of ${movie.title}`}\n          />\n          <MovieDetailsContainer>\n            <h3>\n              {movie.title} ({movie.release_date.slice(0, 4)})\n            </h3>\n\n            <p>User score: {parseInt(movie.vote_average * 10)}%</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{movie.genres.map(obj => `${obj.name} `)}</p>\n\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </MovieDetailsContainer>\n        </StyledMovieDetails>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst BaseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '583f93eb1f9f03306dbe56dd02574154';\n\nexport const getTrendingMovies = async () => {\n  const trendingDaily = '/trending/movie/day';\n  const request = BaseURL + trendingDaily + `?api_key=${API_KEY}`;\n  const response = await axios.get(request);\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const request = BaseURL + `/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(request);\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const request = BaseURL + `/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(request);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const request = BaseURL + `/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(request);\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const request = BaseURL + `/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(request);\n  return response;\n};\n"],"names":["StyledMovieDetails","styled","MovieDetailsContainer","BackLink","Link","useState","movie","setMovie","movieID","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieByID","movieData","getMovieDetails","to","src","poster_path","alt","title","release_date","slice","parseInt","vote_average","overview","genres","map","obj","name","BaseURL","API_KEY","getTrendingMovies","request","axios","response","data","results","getMovieByQuery","query","id","getMovieCast","getMovieReviews"],"sourceRoot":""}